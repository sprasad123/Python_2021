# Task 5

# 1. Write a program in Python to allow the error of syntax to be handled using exception handling. HINT: Use SyntaxError

def exception():
    try:
        my_dict = {
            1: "Anna",
            2: "Emily",
            3: "Austin"
        }
        raise SyntaxError
    except SyntaxError:
        print("There is a syntax error")

# 2. Write a program in Python to allow the user to open a file by using the argv module. If the entered name is incorrect throw an exception and ask them to enter the name again. Make sure to use read only mode.

def openFile(argv):
    try:
        f = open(argv, "r")
    except FileNotFoundError:
        print("Wrong file or file path")
        fileName = str(input("Enter filename with path: "))

# 3. Write a program to handle an error if the user entered a number more than four digits it should return “The length is too short/long !!! Please provide only four digits”

def four():
    try:
        number = input("Enter a number of length 4: ")
        if len(number) > 4 or len(number) < 4:
            raise exception
        else:
            print(number)
    except Exception:
        print("The length is too short/long !!! Please provide only four digits")
        number = input("Enter a number of length 4: ")

# 4. Create a login page backend to ask users to enter the username and password. Make sure to ask for a Re-Type Password and if the password is incorrect give chance to enter it again but it should not be more than 3 times.

def login():
    password = "helloSanDiego"
    i = 0
    while i < 3:
        username = input("Enter username: ")
        input_password = input("Enter password: ")
        if input_password != password:
            i += 1
            input_password = input("Re-Type password: ")
        else:
            break

# 6. Read doc.txt file using Python File handling concept and return only the even length string from the file. Consider the content of doc.txt as given below:
# Hello I am a file
# Where you need to return the data string
# Which is of even length
# Make sure you return the content in The same link as it is present.

def fileEven():
    fileName = open("doc.txt", "r")
    word_list = []
    new_list = []
    for line in fileName:
        stripped_line = line.strip()
        line_list = stripped_line.split()
        word_list.append(line_list)
    for line in word_list:
        for word in line:
            if len(word) % 2 == 0:
                new_list.append(word)
    print(new_list)
    return new_list

# Task 6

# 1. Write a program in Python to find out the character in a string which is uppercase using list comprehension.

def upperCase(s):
    string = [letter for letter in s if letter.isupper()]
    print(string)

# 2. Write a program to construct a dictionary from the two lists containing the names of students and their corresponding subjects. The dictionary should map the students with their respective subjects. Let’s see how to do this using for loops and dictionary comprehension.

def createDict(students, subjects):
    res = {students[i]: subjects[i] for i in range(len(students))}
    print(res)

# 4. Write a program in Python using generators to reverse the string.
# Input String = “Consultadd Training”

def reverseString():
    inputStr = "Consultadd Training"
    n = len(inputStr)
    for i in range(n, -1, -1):
        yield inputStr[i]

# 5. Write an example on decorators.

def subs(a,b):
    res = a - b
    return res

def dec(func):
    def inner(a,b):
        if a < b:
            a,b = b,a
        return func(a,b)
    return inner

dr = dec(subs)
print(dr(2,4))
